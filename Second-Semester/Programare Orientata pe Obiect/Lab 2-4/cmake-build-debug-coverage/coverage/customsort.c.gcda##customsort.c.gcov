        -:    0:Source:C:/Users/Next/CLionProjects/OOP_lab2/customsort.c
        -:    0:Graph:C:\Users\Next\CLionProjects\OOP_lab2\cmake-build-debug-coverage\CMakeFiles\OOP_lab2.dir\customsort.c.gcno
        -:    0:Data:C:\Users\Next\CLionProjects\OOP_lab2\cmake-build-debug-coverage\CMakeFiles\OOP_lab2.dir\customsort.c.gcda
        -:    0:Runs:1
        -:    1:#include "customsort.h"
        -:    2:
function sort called 4 returned 100% blocks executed 100%
        4:    3:void sort(my_list *l, CompareFct cmpF){
        -:    4:    int i, j;
       10:    5:    for (i = 0; i < l->lungime-1; i++) {
        4:    5-block  0
        6:    5-block  1
       10:    5-block  2
branch  0 taken 6
branch  1 taken 4 (fallthrough)
       14:    6:        for (j = i + 1; j < l->lungime; j++) {
        6:    6-block  0
        8:    6-block  1
       14:    6-block  2
branch  0 taken 8
branch  1 taken 6 (fallthrough)
        8:    7:            if (cmpF(&l->lista_oferte[i], &l->lista_oferte[j])){
        8:    7-block  0
call    0 returned 8
branch  1 taken 2 (fallthrough)
branch  2 taken 6
        -:    8:                oferta aux;
        2:    9:                aux = l->lista_oferte[i];
        2:   10:                l->lista_oferte[i] = l->lista_oferte[j];
        2:   11:                l->lista_oferte[j] = aux;
        2:   11-block  0
        -:   12:            }
        -:   13:        }
        -:   14:    }
        4:   15:}
        -:   16:
